% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DNA.Dist.df.R
\name{DNA.Dist.df}
\alias{DNA.Dist.df}
\title{Single locus divergence data.frame}
\usage{
DNA.Dist.df(
  inDNA,
  Dist.type = "percent",
  Out.Format = "long",
  Model = "K80",
  GAMMA = FALSE,
  PW.deletion = TRUE,
  Var = FALSE,
  by.group = NULL,
  group.summary = FALSE,
  within.group = FALSE
)
}
\arguments{
\item{inDNA}{The input aligned sequences in fasta format.}

\item{Dist.type}{Specifies the distance output format. Options are: `"prop"`: Proportions; `"percentage"`: Percentages; and `"nucleotide"`: Number of nucleotides that are different.}

\item{Model}{Specifies the evolutionary model to use, as in `ape::dist.dna`. Options include: `"RAW"`, `"JC69"`, `"K80"` (default), `"F81"`, `"K81"`, `"F84"`, `"T92"`, `"TN93"`, `"GG95"`, `"LOGDET"`, `"BH87"`, `"PARALIN"`, `"N"`, `"TS"`, `"TV"`, `"INDEL"`, and `"INDELBLOCK"`. Note: If `Model = "N"` and `Dist.type` is set to `"prop"` or `"percentage"`, an error will be returned.}

\item{GAMMA}{Same as the `gamma` parameter in `ape::dist.dna()`.}

\item{PW.deletion}{Specifies whether pairwise deletion should be considered (`TRUE`, default) or not (`FALSE`).}

\item{Var}{If `TRUE`, the output will include calculated variation. Default is `FALSE`.}

\item{by.group}{A vector for grouping sequences into different categories (e.g., populations, species, lineages). The order should match the sequence alignment and be used with `vegan::meandist()`.}

\item{group.summary}{Applies `vegan::meandist()` to generate a `data.frame` with within-group mean distance, between-group mean distance, and overall distance. A vector with discrete groupings should be provided in `by.group`.}

\item{within.group}{Applies `vegan::meandist()` to create a `data.frame` with each groupâ€™s mean divergence and the number of samples ("N") by group. A vector with discrete groupings should be provided in `by.group`. Groups with `N = 1` will return `NA`s.}
}
\value{
A dataframe with the mean distance between groups or within group distances.
         Note: `DNA.Dist.df` should not be used as a species delimitation analysis as it does not explicitly tests a hypothesis.
}
\description{
A function that applies `ape::dist.dna()` but changes `"dist"` class output from `ape::dist.dna()` (or similar data) to `data.frame`.
}
\examples{
# Distance matrix class == data.frame of all specimens
DNA.Dist.df(test.DNA, Out.Format = "wide")

# same as above but with JC96 model
DNA.Dist.df(test.DNA, Out.Format = "wide", Model = "JC69")

# as above, but long pair-wise comparison format
DNA.Dist.df(test.DNA, Out.Format = "long", Model = "JC69")

####
# Defining groupings
####

#create data.frame with specimen and grouping (e.g., species) IDs
Species.info <- data.frame(Specimen = paste0("Ind",LETTERS[1:9]),
                           Species = paste0("Sp",c(rep(1,3),rep(2,3),rep(3,3))),
                           Seq.names = names(test.DNA))

Species.info  # Check that they match.
# The funtion uses the order of the `by.group` vector to group the sequences

DNA.Dist.df(test.DNA, Out.Format = "long", Model = "JC69", by.group = Species.info$Species)

# Reorganize the output
Comparison <- DNA.Dist.df(test.DNA, Out.Format = "long", Model = "JC69",
                          by.group = Species.info$Species)
Comparison <- data.frame(Pairs = paste(Comparison$x1, Comparison$x2, sep = "_vs_"),
                         Distance = Comparison$Distance)
Comparison

#wide format
WDist <- DNA.Dist.df(test.DNA, Out.Format = "wide", Model = "JC69",
                      by.group = Species.info$Species)
WDist


}
