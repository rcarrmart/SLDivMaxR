% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DNA.GroupDist.SE.R
\name{DNA.GroupDist.SE}
\alias{DNA.GroupDist.SE}
\title{Group Divergence Standard Error}
\usage{
DNA.GroupDist.SE(
  inDNA,
  Dist.type = "percent",
  Out.Format = "long",
  Model = "K80",
  GAMMA = FALSE,
  PW.deletion = TRUE,
  by.group,
  within.group = FALSE
)
}
\arguments{
\item{inDNA}{The input aligned sequences in fasta format.}

\item{Dist.type}{Specifies the distance output format. Options are `"prop"`: Proportions; `"percentage"`: Percentages; and `"nucleotide"`: Number of nucleotides that differ.}

\item{Model}{Specifies the evolutionary model to use, as in ape::dist.dna. Options include: `"RAW"`, `"JC69"`, `"K80"` (default), `"F81"`, `"K81"`, `"F84"`, `"T92"`, `"TN93"`, `"GG95"`, `"LOGDET"`, `"BH87"`, `"PARALIN"`, `"N"`, `"TS"`, `"TV"`, `"INDEL"`, and `"INDELBLOCK"`. Note: If `Model = "N"` and `Dist.type` is set to `"prop"` or `"percentage"`, an error will be returned.}

\item{GAMMA}{Same as `gamma` in `ape::dist.dna()`.}

\item{PW.deletion}{Specifies whether pairwise deletion should be considered (TRUE, default) or not (FALSE).}

\item{by.group}{A vector for grouping sequences into different categories (e.g., populations, species, lineages). The vector should follow the same order as the sequence alignment.}

\item{within.group}{Creates a data.frame with the within-group standard error and the number of samples ("N") by group. A vector with discrete groupings should be provided in by.group. Groups with N = 1 will return NAs.}
}
\value{
A data.frame with the standard errors of the mean distance between or within groups distances.
}
\description{
Calculates standard error of specified between and within group genetic divergences.
}
\examples{
# Defining groupings

#create data.frame with specimen and grouping (e.g., species) IDs
Species.info <- data.frame(Specimen = paste0("Ind",LETTERS[1:9]),
                            Species = paste0("Sp",c(rep(1,3),rep(2,3),rep(3,3))),
                            Seq.names = names(test.DNA))

Species.info  # Check that they match.
# The funtion uses the order of the `by.group` vector to group the sequences

DNA.GroupDist.SE(test.DNA, Out.Format = "long", Model = "JC69",
                 by.group = Species.info$Species)

CompSE<- DNA.GroupDist.SE(test.DNA, Out.Format = "long", Model = "JC69",
                            by.group = Species.info$Species)
CompSE <- data.frame(Pairs = paste(CompSE$x1, CompSE$x2, sep = "_vs_"),
                     SE = CompSE$Standard_Error)
CompSE

#wide format
WDistSE <- DNA.GroupDist.SE(test.DNA, Out.Format = "wide", Model = "JC69",
                            by.group = Species.info$Species)
WDistSE

}
