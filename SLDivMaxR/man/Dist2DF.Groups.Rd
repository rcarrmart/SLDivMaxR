% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Dist2DF.Groups.R
\name{Dist2DF.Groups}
\alias{Dist2DF.Groups}
\title{Mean Distances between Group}
\usage{
Dist2DF.Groups(
  inDist,
  Convert100 = FALSE,
  get.group = NULL,
  n.groups = NULL,
  method = "PW",
  G.Name = "group"
)
}
\arguments{
\item{Convert100}{Converts proportions to percentages.}

\item{get.group}{Provides discreet grouping using maximum divergence threshold between sequences.}

\item{n.groups}{Groups low-diverging sequences to a specified number of groups, regardless their within group divergences.}

\item{method}{Options to use pairwise comparisons ("PW", default), or using the `hclust` and `cutree` approach ("CT"). If using `n.groups`, then `method` should be set to "CT"}

\item{G.Name}{A user-defined character to name the groupings. Default is `"group"``.}

\item{inDust}{A `"dist"` object matrix, output of `ape::dist.dna` or alike matrix}
}
\value{
A data.frame with the mean distance between groups group distances from a distance matrix produced by `ape::dist.dna`
     Note: `Dist2DF.Groups` should not be used as a species delimitation analysis as it does not explicitly tests a hypothesis.
}
\description{
A function that clusters samples of a distance matrix (`class == 'dist'`) by a maximum distance threshold or to a set number of groups.
}
\examples{
test.dist <- dist.dna(test.DNA)

# threshold of 0.7
dist.g.prop0.7 <- Dist2DF.Groups(test.dist, get.group = 0.7)

# threshold of 7\%
dist.g.per7 <- Dist2DF.Groups(test.dist, get.group = 7, Convert100 = TRUE)

# threshold of 10\% using the `hclust` and `cutree` approach
# Setting group names to "Species"
bySpecies <- Dist2DF.Groups(test.dist, get.group = 10, Convert100 = T,
                             method = "CT", G.Name = "Species")

# Cluster to 3 groups
Dist2DF.Groups(test.dist, n.groups = 3, Convert100 = T, method = "CT") test.dist <- dist.dna(test.DNA)

# threshold of 0.7
dist.g.prop0.7 <- Dist2DF.Groups(test.dist, get.group = 0.7)

# threshold of 7\%
dist.g.per7 <- Dist2DF.Groups(test.dist, get.group = 7, Convert100 = TRUE)

# threshold of 10\% using the `hclust` and `cutree` approach
# Setting group names to "Species"
bySpecies <- Dist2DF.Groups(test.dist, get.group = 10, Convert100 = T,
                            method = "CT", G.Name = "Species")

# Cluster to 3 groups
Dist2DF.Groups(test.dist, n.groups = 3, Convert100 = T, method = "CT")


}
